/*
 * Copyright oVirt Authors
 * SPDX-License-Identifier: Apache-2.0
 */

package org.ovirt.engine.sdk4.types;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * Configuration format types.
 */
public enum ConfigurationType {
    /**
     * ConfigurationType of type standard OVF.
     * 
     * The provided virtual machine configuration conforms with the Open Virtualization Format (OVF) standard.
     * This value should be used for an OVF configuration that is extracted from an Open Virtual Appliance (OVA) that
     * was generated by oVirt or by other vendors.
     * See https://www.dmtf.org/standards/ovf[here] for the OVF specification.
     */
    OVA("ova"),
    /**
     * ConfigurationType of type oVirt-compatible OVF.
     * 
     * The provided virtual machine configuration conforms with the oVirt-compatible form of the Open Virtualization
     * Format (OVF).
     * Note that the oVirt-compatible form of the OVF may differ from the OVF standard that is used by other vendors.
     * This value should be used for an OVF configuration that is taken from a storage domain.
     */
    OVF("ovf"),
    ;
    
    private static final Logger log = LoggerFactory.getLogger(ConfigurationType.class);
    
    private String image;
    
    ConfigurationType(String image) {
        this.image = image;
    }
    
    public String value() {
        return image;
    }
    
    public static ConfigurationType fromValue(String value) {
        try {
            return valueOf(value.toUpperCase());
        }
        catch (IllegalArgumentException exception) {
            log.error(
            "The string '" + value + "' isn't a valid value for the 'ConfigurationType' enumerated type. " +
            "Valid values are 'ova' and 'ovf'.",
            exception
            );
            return null;
        }
    }
    
}

